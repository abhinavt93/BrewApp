@model BrewApp.ViewModel.BrewingBlotterViewModel
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Load";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .AlignCenter {
        text-align: center !important;
        vertical-align:central;
       
    }

    .AlignLeft {
        text-align: left !important;
    }

    .AlignRight {
        text-align: right !important;
    }

    .ColWidthL {
        width: 200px !important;
    }

    .ColWidthM {
        width: 100px !important;
    }

    .ColWidthS {
        width: 20px !important;
    }

    .btnUpdate {
        width: 130px;
        margin-bottom: 20px;
        margin-top: 20px;
    }

    #btnUpdate {
        cursor: pointer;
        -webkit-appearance: button;
    }

    .ddlWidth {
        width: 200px !important;
        padding-right:5px;
    }

    .lblWidth {
        width: 80px !important;
    }
    .lblWidthProcessedYN {
        width: 125px !important;
    }
    .txtBoxWidth3 {
        width: 50px !important;
    }
    .lblWidth1 {
         width: 150px !important;
    }
    .rowUnprocessed{
        color: darkred;
        background-color:#fcf1f0;
    }
    .rowProcessed {
        /*color: darkgreen;
        background-color: lightgreen;*/
    }
</style>

<h2>Brewing Blotter</h2>

@using (Html.BeginForm("GetRefIdDetails", "BrewingBlotter", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken();
    <hr />
    
<table>
    <tr>
        <th>
            @Html.LabelFor(m => m.ProcessedYN, new { @class = "col-md-2 control-label AlignLeft lblWidthProcessedYN" })
        </th>
    
        <th>
            @Html.DropDownListFor(m => m.ProcessedYN, new SelectList(Enum.GetValues(typeof(BrewApp.ViewModel.ProcessedYN))), new { @class = "form-control ddlWidth", id = "ddlProcessedYN" })
        </th>

        <td>
            @Html.LabelFor(m => m.RefID, new { @class = "col-md-2 control-label AlignLeft lblWidth" })
        </td>

        <td>
            @Html.TextBoxFor(m => m.RefID, new { @class = "form-control txtBoxWidth2 AlignRight", id = "txtRefID" })
        </td>

        <td>
            <input type="submit" class="btn btn-default btn" id="btnSearch" value="Search" />
        </td>

        <td>
            @Html.LabelFor(m => m.RecordPerPage, new { @class = "col-md-2 control-label AlignLeft lblWidth1" })
        </td>

        <td>
            @Html.TextBoxFor(m => m.RecordPerPage, new { @class = "form-control txtBoxWidth3 AlignRight", id = "txtRefID", @readonly = "readonly" })
        </td>

        <td style="display:none">
            <input type="text" id="txtBlotterId" value="0">
        </td>

    </tr>
</table>
<br />
<br />

<table id="tblBrewingBlotter" class="table" style="width: max-content;">
    <thead>
        <tr>
            <th class="AlignCenter ColWidthM">Actions</th>
            <th class="AlignCenter ColWidthM">Brew ID</th>           
            <th class="AlignCenter ColWidthL">Recipe Name</th>
            <th class="AlignCenter ColWidthL">Brew Quantity</th>
            <th class="AlignCenter ColWidthL">Prod. Cost</th>
            <th class="AlignCenter ColWidthL">Brew Time</th>
            <th class="AlignCenter ColWidthL">Processed YN</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var brew in Model.BrewingBlotter)
        {
            if (brew.Processed_YN == "Y")
            {
                <tr class="rowProcessed">
                    <td class="AlignCenter"></td>
                    <td class="AlignCenter">@brew.BrewingId</td>
                    <td class="AlignLeft">#@brew.Recipeid: @brew.RecipeName</td>
                    <td class="AlignRight">@(Math.Round(brew.Quantity, 2))</td>
                    <td class="AlignRight">@(Math.Round(brew.ProductionCost, 2))</td>
                    <td class="AlignCenter">@brew.BrewingTime.ToString("dd-MMM-yyyy HH:mm:ss").Replace("01-Jan-1900", "-")</td>
                    <td class="AlignCenter">@brew.Processed_YN</td>
                </tr>
            }
            else
            {
                <tr class="rowUnprocessed">
                    <td class="AlignCenter">@Html.ActionLink("Update", "Load", "Brewing", new { id = brew.BrewingId }, new { @class = "" })</td>
                    <td class="AlignCenter">@brew.BrewingId</td>
                    <td class="AlignLeft">#@brew.Recipeid: @brew.RecipeName</td>
                    <td class="AlignRight">@(Math.Round(brew.Quantity, 2))</td>
                    <td class="AlignRight">@(Math.Round(brew.ProductionCost, 2))</td>
                    <td class="AlignCenter">@brew.BrewingTime.ToString("dd-MMM-yyyy HH:mm:ss").Replace("01-Jan-1900", "-")</td>
                    <td class="AlignCenter">@brew.Processed_YN</td>
                </tr>
            }

        }
    </tbody>
</table>

    
    <div id="BrewingPaginationDiv" >
        @Html.PagedListPager(Model.BrewingBlotter, page => Url.Action("Load", new { id = Model.RefID, processedYN = Model.ProcessedYN, page = page }))
    </div>

}



